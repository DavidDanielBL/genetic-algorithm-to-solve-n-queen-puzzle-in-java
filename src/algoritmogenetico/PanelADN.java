package algoritmogenetico;

import java.awt.Dimension;
import java.awt.Graphics;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;

/**
 *
 * @author USUARIO
 */
public class PanelADN extends javax.swing.JPanel {

    public void paintComponent(Graphics g) {
        Dimension tamanio = getSize();
        ImageIcon imagenFondo = new ImageIcon(getClass().
                getResource("/Imagenes/dna1.jpg"));
        g.drawImage(imagenFondo.getImage(), 0, 0,
                tamanio.width, tamanio.height, null);
        setOpaque(false);

        super.paintComponent(g);

    }

    /**
     * Creates new form PanelADN
     */
    public PanelADN() {

        M = new String[1000][1000];
        initComponents();
        this.setSize(800, 1000);

    }

    public void imprimirreinas(Vector v) {
        String texto = "";
        String matrizA = "\n";
        for (int i = 0; i < v.size(); i++) {
            for (int j = 0; j < v.size(); j++) {
                if (v.elementAt(j).equals(i)) {
                    M[i][j] = " o ";
                    matrizA += "   " + M[i][j];

                } else {
                    if ((i + j) % 2 == 0) {
                        M[i][j] = "█";
                    } else {
                        M[i][j] = "░";
                    }

                    matrizA += "   " + M[i][j];
                }

            }
            matrizA += "\n";
        }

        texto = "[Chromosomes matrix]" + matrizA + " " + texto + "\n";
        JTPoblacionInicial.append(texto);
        JTPoblacionInicial.append("       " + "\n");

//        System.out.println(texto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIniciar = new javax.swing.JButton();
        jtFPoblacion = new javax.swing.JTextField();
        jtFCanReinas = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTPoblacionInicial = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        btnIniciar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnIniciar.setText("START");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        jtFPoblacion.setText("500");

        jtFCanReinas.setText("4");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reinas.png"))); // NOI18N

        JTPoblacionInicial.setColumns(20);
        JTPoblacionInicial.setRows(5);
        JTPoblacionInicial.setToolTipText("Con 4 reinas se puede ver\n las amenazas en el tablero\n o utilidad");
        jScrollPane1.setViewportView(JTPoblacionInicial);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Queens quantity");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Population");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31)
                                .addComponent(jtFPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jtFCanReinas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtFPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jtFCanReinas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)))
                        .addGap(50, 50, 50)
                        .addComponent(btnIniciar)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        JTPoblacionInicial.setText("");

        Double tasadecruce;
        tasadecruce = 1.0;
        Double tasademutacion;
        tasademutacion = 0.0;

        int nropobla = Integer.parseInt(jtFPoblacion.getText());
        int reinas = Integer.parseInt(jtFCanReinas.getText());
        Vector v = new Vector();
        List<CromosomaNreinas> poblacion;
        poblacion = new ArrayList<CromosomaNreinas>();
        AlgoritmogeneticoNreinas ab = new AlgoritmogeneticoNreinas();
        for (int i = 0; i < nropobla; i++) {
            poblacion.add(i, ab.generarpoblacioninicial(reinas, v));
        }
        System.out.println("Poblacion INICIAL");
        for (CromosomaNreinas cro : poblacion) {

            System.out.println(cro.getUtilidad());
            JTPoblacionInicial.append("Fitness :" + String.valueOf(cro.getUtilidad()) + "\n");
            System.out.println(cro.getV());
            JTPoblacionInicial.append("Chromosome vector :" + cro.getV().toString() + "\n");

            imprimirreinas(cro.getV());
        }
        int zero = 100;
        /////////////////////////////////////////////////////////////////////////////
        int iteraciones = 0;
        int Padres = nropobla - 1;
        while (zero != 0) {
            AlgoritmogeneticoNreinas a = new AlgoritmogeneticoNreinas();
            a.setPadres(Padres);
            //a.seleccionruleta( poblacion);
            a.setHijos(new ArrayList<CromosomaNreinas>());
            a.GenerarDescendencia(tasadecruce, tasademutacion, poblacion, a.getPadres());//Se ingresa tasa de cruzamiento

            poblacion = a.getHijos();
            iteraciones++;
            System.out.println(iteraciones);
            zero = a.getMejorfitness().getUtilidad();
        }
        for (CromosomaNreinas cro : poblacion) {

            System.out.println(cro.getUtilidad());
            JTPoblacionInicial.append("Fitness :" + String.valueOf(cro.getUtilidad()) + "\n");
            System.out.println(cro.getV());
            JTPoblacionInicial.append("Chromosome vector :" + cro.getV().toString() + "\n");
            imprimirreinas(cro.getV());
        }

        
        ///////////////////////////////////////////////////////////////
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIniciarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JTPoblacionInicial;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtFCanReinas;
    private javax.swing.JTextField jtFPoblacion;
    // End of variables declaration//GEN-END:variables
    public String[][] M;

}
